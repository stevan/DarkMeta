NOTES:

Look at https://github.com/ooyala/barkeep


## ----------------------------------------------------------------
## Some JS to steal below

// NOTE:
// This was taken from the metacpan page that shows the source,
// it is only here for reference and copying good stuff from.
// - SL

## Dealing with the URL hash

//     // convert a string like "1,3-5,7" into an array [1,3,4,5,7]
//     function parseLines (lines) {
//         lines = lines.split(/\s*,\s*/);
//         var all_lines = [];
//         for (var i = 0; i < lines.length; i++) {
//             var line = lines[i];
//             var res = line.match(/^\s*(\d+)\s*(?:-\s*(\d+)\s*)?$/);
//             if (res) {
//                 var start = res[1]*1;
//                 var end = (res[2] || res[1])*1;
//                 if (start > end) {
//                     var swap = end;
//                     end = start;
//                     start = swap;
//                 }
//                 for (var l = start; l <= end; l++) {
//                     all_lines.push(l);
//                 }
//             }
//         }
//         return all_lines;
//     }
//     function findLines (el, lines) {
//         var selector = $.map(
//             parseLines(lines),
//             function (line) { return '.number' + line }
//         ).join(', ');
//         return el.find('.syntaxhighlighter .line').filter(selector);
//     }
//     var hashLines = /^#L(\d+(?:-\d+)?(?:,\d+(?:-\d+)?)*)$/;

## checking long source files ...

//     var source = $("#source");
//     if (source.length) {
//         var lineMatch;
//         var packageMatch;
//         // avoid highlighting excessively large blocks of code as they will take
//         // too long, causing browsers to lag and offer to kill the script
//         if (source.html().length > 500000) {
//             source.children('code').removeClass();
//         }
//         // save highlighted lines in an attribute, to be used later
//         else if ( lineMatch = document.location.hash.match(hashLines) ) {
//             source.attr('data-line', lineMatch[1]);
//         }
//     }

# multi-select code (STEAL THIS)

//     if (source.length) {
//         // on the source page, make line numbers into links
//         source.find('.syntaxhighlighter .gutter .line').each(function(i, el) {
//             var line = $(el);
//             var res;
//             if (res = line.attr('class').match(/(^|\s)number(\d+)(\s|$)/)) {
//                 var linenr = res[2];
//                 var id = 'L' + linenr;
//                 line.contents().wrap('<a href="#'+id+'" id="'+id+'"></a>');
//                 var link = line.children('a');
//                 link.click(function(e) {
//                     if (e.metaKey) {
//                         return false;
//                     }
//                     // normally the browser would update the url and scroll to
//                     // the the link.  instead, update the hash ourselves, but
//                     // unset the id first so it doesn't scroll
//                     e.preventDefault();
//                     var line = linenr;
//                     if (e.shiftKey && source.attr('data-line')) {
//                         var startLine = parseLines(source.attr('data-line'))[0];
//                         line = startLine < line ? startLine + '-' + line
//                                                 : line + '-' + startLine;
//                     }
//                     link.removeAttr('id');
//                     document.location.hash = '#L' + line;
//                     link.attr('id', id);
//                     source.attr('data-line', line);
//                 });
//             }
//         });
//         // the line ids are added by javascript, so the browser won't have
//         // scrolled to it.  also, highlight ranges don't correspond to exact
//         // ids.  do the initial scroll ourselves.
//         var res;
//         if (res = document.location.hash.match(/^(#L\d+)(-|,|$)/)) {
//             var el = $(res[1]);
//             $('html, body').scrollTop(el.offset().top);
//         }

## More hash change stuff

//         // if someone changes the url hash manually, update the highlighted lines
//         $(window).on('hashchange', function() {
//             var lineMatch;
//             if (lineMatch = document.location.hash.match(hashLines) ) {
//                 source.attr('data-line', lineMatch[1]);
//                 source.find('.highlighted').removeClass('highlighted');
//                 var lines = findLines(source, lineMatch[1]);
//                 lines.addClass('highlighted');
//             }
//         });
//     }

